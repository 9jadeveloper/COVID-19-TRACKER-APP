{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","img/cm.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","cImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.426b922d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3MewP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Ml_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__20UMf\",\"card\":\"Cards_card__1xDSd\",\"infected\":\"Cards_infected__hL7V3\",\"recovered\":\"Cards_recovered__rnl_1\",\"deaths\":\"Cards_deaths__O4hmT\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport Countup from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data : { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            className={cx(styles.card, styles.infected)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Infected\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <Countup\r\n                  start={0}\r\n                  end={confirmed.value}\r\n                  duration={3.0}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of active cases of covid-19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            className={cx(styles.card, styles.recovered)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Recoveries\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <Countup\r\n                  start={0}\r\n                  end={recovered.value}\r\n                  duration={3.0}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of recoveries from covid-19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            className={cx(styles.card, styles.deaths)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <Countup\r\n                  start={0}\r\n                  end={deaths.value}\r\n                  duration={3.0}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of deaths resulting from covid-19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    } \r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async  () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI =  async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n\r\n        fetchAPI()\r\n    }, []);\r\n\r\nconst lineChart = (\r\n    dailyData.length ? ( <Line data={{\r\n        labels: dailyData.map(( { date }) => date),\r\n        datasets: [{\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: 'blue',\r\n            fill: true\r\n        }, {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(250, 0, 0, 0.6)',\r\n            fill: true\r\n        }]\r\n    }} /> ) : null\r\n);\r\n\r\n\r\nconst barChart = confirmed ? (\r\n  <Bar\r\n    data={{\r\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n      datasets: [\r\n        {\r\n          label: \"People\",\r\n          backgroundColor: ['rgba(0, 0, 255, 0.6)', 'rgba(0, 255, 0, 0.6)', 'rgba(255, 0, 0, 0.7)'],\r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n        },\r\n      ],\r\n    }}\r\n    options={{\r\n      legend: { display: false },\r\n      title: { display: true, text: `Current Situation in ${country}` },\r\n    }}\r\n  />\r\n) : null;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {  useState, useEffect} from \"react\";\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI()\r\n  }, [setFetchedCountries])\r\n\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        { fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option> )}\r\n      </NativeSelect>\r\n      </FormControl>\r\n  )\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/cm.9e5d4fc7.png\";","import React from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api';\r\n\r\nimport cImage from './img/cm.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData })\r\n    } \r\n\r\n    handleCountryChange = async (country) => {\r\n      const fetchedData = await fetchData(country)\r\n      \r\n      this.setState({ data: fetchedData, country: country });      \r\n\r\n    } \r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n          <div className={styles.container}>\r\n            <img className={styles.image} src={cImage} alt='COVID-19'/>\r\n            <Cards data={ data } />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Chart data={data} country={country} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__vD8o-\",\"image\":\"App_image__1t_ot\"};"],"sourceRoot":""}